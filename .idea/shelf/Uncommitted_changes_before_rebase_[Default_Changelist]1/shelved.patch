Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        \r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.1.3'\r\n        classpath 'com.google.gms:google-services:4.3.5'\r\n        classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.0'\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven { url 'https://jitpack.io' }\r\n        maven { url \"https://raw.github.com/laenger/maven-releases/master/releases\" }\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision 4ccb02739fb8eb4c84f00b11fb21af81bec46881)
+++ build.gradle	(date 1623856963971)
@@ -7,7 +7,7 @@
         
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:4.1.3'
+        classpath 'com.android.tools.build:gradle:4.2.1'
         classpath 'com.google.gms:google-services:4.3.5'
         classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.0'
         // NOTE: Do not place your application dependencies here; they belong
Index: app/src/main/java/com/VegaSolutions/lpptransit/ui/activities/MapFragmentActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.VegaSolutions.lpptransit.ui.activities;\r\n\r\nimport android.animation.Animator;\r\nimport android.animation.AnimatorListenerAdapter;\r\nimport android.animation.ObjectAnimator;\r\nimport android.animation.ValueAnimator;\r\nimport android.location.Location;\r\nimport android.view.View;\r\nimport android.view.animation.LinearInterpolator;\r\nimport android.widget.ImageView;\r\n\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.FragmentActivity;\r\n\r\nimport com.VegaSolutions.lpptransit.R;\r\nimport com.VegaSolutions.lpptransit.ui.custommaps.LocationMarkerManager;\r\nimport com.VegaSolutions.lpptransit.ui.custommaps.TravanaLocationManager;\r\nimport com.VegaSolutions.lpptransit.utility.MapUtility;\r\nimport com.VegaSolutions.lpptransit.utility.ViewGroupUtils;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.MapStyleOptions;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic abstract class MapFragmentActivity extends FragmentActivity implements OnMapReadyCallback, TravanaLocationManager.TravanaLocationListener {\r\n\r\n    protected GoogleMap mMap;\r\n\r\n    protected LatLng ljubljana = new LatLng(46.056319, 14.505381);\r\n    protected TravanaLocationManager locationManager;\r\n    protected LocationMarkerManager markerManager;\r\n\r\n    protected ImageView locationIcon;\r\n\r\n    protected List<View> toHide = new ArrayList<>();\r\n    protected boolean hidden = false;\r\n\r\n    private int paddingTop = 0;\r\n    private int paddingBottom = 0;\r\n    private int paddingLeft = 0;\r\n    private int paddingRight = 0;\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        if (locationManager != null)\r\n            locationManager.removeListener(this);\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        if (locationManager != null)\r\n            locationManager.addListener(this);\r\n    }\r\n\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap) {\r\n\r\n        mMap = googleMap;\r\n\r\n        toHide.add(locationIcon);\r\n\r\n        // Setup generic UI\r\n        mMap.getUiSettings().setCompassEnabled(true);\r\n        mMap.getUiSettings().setMyLocationButtonEnabled(false);\r\n        mMap.getUiSettings().setMapToolbarEnabled(false);\r\n        mMap.getUiSettings().setRotateGesturesEnabled(false);\r\n        mMap.setMapStyle(new MapStyleOptions(ViewGroupUtils.isDarkTheme(this) ? getString(R.string.dark_2) : getString(R.string.white)));\r\n\r\n        // Set location button location callback.\r\n        if (MapUtility.checkIfAtLeastOnePermissionPermitted(this)) {\r\n\r\n            // Setup location objects\r\n            locationManager = new TravanaLocationManager(this);\r\n            markerManager = new LocationMarkerManager(this, mMap,\r\n                    locationManager.getLatest(),\r\n                    MapUtility.getMarkerIconFromDrawable(ContextCompat.getDrawable(this, R.drawable.current_location_live)),\r\n                    MapUtility.getMarkerIconFromDrawable(ContextCompat.getDrawable(this, R.drawable.current_location_offline)));\r\n\r\n            markerManager.setLive(locationManager.isLive());\r\n            locationManager.addListener(this);\r\n\r\n            locationIcon.setVisibility(View.VISIBLE);\r\n            locationIcon.setOnClickListener(v -> {\r\n                LatLng location = locationManager.getLatest();\r\n                if (location != null)\r\n                    mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(location, 15f));\r\n            });\r\n\r\n        }\r\n\r\n        // remove this option.\r\n        //mMap.setOnMapClickListener(latLng -> setHide(!hidden));\r\n\r\n\r\n    }\r\n\r\n    private void setHide(boolean value) {\r\n        for (View v : toHide)\r\n            show(v, value);\r\n        hidden = !hidden;\r\n    }\r\n\r\n    private void show(View view, boolean value) {\r\n\r\n        // Animate view alpha.\r\n        if (!value) {\r\n            // Show view.\r\n            view.setVisibility(View.VISIBLE);\r\n            animatePadding(true);\r\n            ObjectAnimator objectAnimator = ObjectAnimator.ofFloat(view, \"alpha\", 0, 1);\r\n            objectAnimator.setDuration(200);\r\n            objectAnimator.setInterpolator(new LinearInterpolator());\r\n            objectAnimator.start();\r\n        } else {\r\n            // Hide view.\r\n            animatePadding(false);\r\n            ObjectAnimator objectAnimator = ObjectAnimator.ofFloat(view, \"alpha\", 1, 0);\r\n            objectAnimator.setDuration(200);\r\n            objectAnimator.setInterpolator(new LinearInterpolator());\r\n            objectAnimator.addListener(new AnimatorListenerAdapter() {\r\n                @Override\r\n                public void onAnimationEnd(Animator animation) {\r\n                    super.onAnimationEnd(animation);\r\n                    view.setVisibility(View.GONE);\r\n                }\r\n            });\r\n            objectAnimator.start();\r\n        }\r\n    }\r\n\r\n    private void animatePadding(boolean value) {\r\n\r\n        ValueAnimator animator;\r\n        if (value) {\r\n            animator = ValueAnimator.ofInt(0, paddingBottom);\r\n        } else {\r\n            animator = ValueAnimator.ofInt(paddingBottom, 0);\r\n        }\r\n        animator.setDuration(200);\r\n\r\n        animator.addUpdateListener(animation -> {\r\n            int value1 = (int) animation.getAnimatedValue();\r\n            mMap.setPadding(paddingLeft, paddingTop, paddingRight, value1);\r\n        });\r\n\r\n        animator.start();\r\n\r\n    }\r\n\r\n    protected void setPadding(int left, int top, int right, int bottom) {\r\n        mMap.setPadding(left, top, right, bottom);\r\n        paddingBottom = bottom;\r\n        paddingLeft = left;\r\n        paddingTop = top;\r\n        paddingRight = right;\r\n    }\r\n\r\n    protected void setBottomPadding(int bottom) {\r\n        if (mMap != null)\r\n            mMap.setPadding(paddingLeft, paddingTop, paddingRight, bottom);\r\n        paddingBottom = bottom;\r\n    }\r\n\r\n    @Override\r\n    public void onLocationChanged(Location location) {\r\n        if (markerManager != null)\r\n            markerManager.update(location);\r\n    }\r\n\r\n    @Override\r\n    public void onProviderAvailabilityChanged(boolean value) {\r\n        if (markerManager != null)\r\n            markerManager.setLive(value);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/VegaSolutions/lpptransit/ui/activities/MapFragmentActivity.java	(revision 4ccb02739fb8eb4c84f00b11fb21af81bec46881)
+++ app/src/main/java/com/VegaSolutions/lpptransit/ui/activities/MapFragmentActivity.java	(date 1623856963982)
@@ -1,14 +1,18 @@
 package com.VegaSolutions.lpptransit.ui.activities;
 
+import android.Manifest;
 import android.animation.Animator;
 import android.animation.AnimatorListenerAdapter;
 import android.animation.ObjectAnimator;
 import android.animation.ValueAnimator;
+import android.annotation.SuppressLint;
+import android.content.pm.PackageManager;
 import android.location.Location;
 import android.view.View;
 import android.view.animation.LinearInterpolator;
 import android.widget.ImageView;
 
+import androidx.core.app.ActivityCompat;
 import androidx.core.content.ContextCompat;
 import androidx.fragment.app.FragmentActivity;
 
@@ -31,9 +35,6 @@
     protected GoogleMap mMap;
 
     protected LatLng ljubljana = new LatLng(46.056319, 14.505381);
-    protected TravanaLocationManager locationManager;
-    protected LocationMarkerManager markerManager;
-
     protected ImageView locationIcon;
 
     protected List<View> toHide = new ArrayList<>();
@@ -44,20 +45,7 @@
     private int paddingLeft = 0;
     private int paddingRight = 0;
 
-    @Override
-    protected void onPause() {
-        super.onPause();
-        if (locationManager != null)
-            locationManager.removeListener(this);
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        if (locationManager != null)
-            locationManager.addListener(this);
-    }
-
+    @SuppressLint("MissingPermission")
     @Override
     public void onMapReady(GoogleMap googleMap) {
 
@@ -68,6 +56,7 @@
         // Setup generic UI
         mMap.getUiSettings().setCompassEnabled(true);
         mMap.getUiSettings().setMyLocationButtonEnabled(false);
+        mMap.getUiSettings().setMyLocationButtonEnabled(false);
         mMap.getUiSettings().setMapToolbarEnabled(false);
         mMap.getUiSettings().setRotateGesturesEnabled(false);
         mMap.setMapStyle(new MapStyleOptions(ViewGroupUtils.isDarkTheme(this) ? getString(R.string.dark_2) : getString(R.string.white)));
@@ -76,22 +65,22 @@
         if (MapUtility.checkIfAtLeastOnePermissionPermitted(this)) {
 
             // Setup location objects
-            locationManager = new TravanaLocationManager(this);
-            markerManager = new LocationMarkerManager(this, mMap,
-                    locationManager.getLatest(),
-                    MapUtility.getMarkerIconFromDrawable(ContextCompat.getDrawable(this, R.drawable.current_location_live)),
-                    MapUtility.getMarkerIconFromDrawable(ContextCompat.getDrawable(this, R.drawable.current_location_offline)));
-
-            markerManager.setLive(locationManager.isLive());
-            locationManager.addListener(this);
-
+            mMap.setMyLocationEnabled(true);
             locationIcon.setVisibility(View.VISIBLE);
             locationIcon.setOnClickListener(v -> {
+                if (location != null)
+                    mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(location, 15f));
+            });
+
+        } else {
+            mMap.setMyLocationEnabled(false);
+            locationIcon.setVisibility(View.INVISIBLE);
+            locationIcon.setOnClickListener(v -> {
+                latitude
                 LatLng location = locationManager.getLatest();
                 if (location != null)
                     mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(location, 15f));
             });
-
         }
 
         // remove this option.
@@ -167,16 +156,4 @@
         paddingBottom = bottom;
     }
 
-    @Override
-    public void onLocationChanged(Location location) {
-        if (markerManager != null)
-            markerManager.update(location);
-    }
-
-    @Override
-    public void onProviderAvailabilityChanged(boolean value) {
-        if (markerManager != null)
-            markerManager.setLive(value);
-    }
-
 }
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Wed Mar 17 08:30:35 CET 2021\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.5-all.zip\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision 4ccb02739fb8eb4c84f00b11fb21af81bec46881)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1623856963990)
@@ -3,4 +3,4 @@
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.7.1-all.zip
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"1.8\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision 4ccb02739fb8eb4c84f00b11fb21af81bec46881)
+++ .idea/compiler.xml	(date 1623856963998)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="1.8" />
+    <bytecodeTargetLevel target="11" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"RunConfigurationProducerService\">\r\n    <option name=\"ignoredProducers\">\r\n      <set>\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/runConfigurations.xml	(revision 4ccb02739fb8eb4c84f00b11fb21af81bec46881)
+++ .idea/runConfigurations.xml	(date 1623856964005)
@@ -3,6 +3,7 @@
   <component name="RunConfigurationProducerService">
     <option name="ignoredProducers">
       <set>
+        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"NullableNotNullManager\">\r\n    <option name=\"myDefaultNullable\" value=\"org.jetbrains.annotations.Nullable\" />\r\n    <option name=\"myDefaultNotNull\" value=\"androidx.annotation.NonNull\" />\r\n    <option name=\"myNullables\">\r\n      <value>\r\n        <list size=\"15\">\r\n          <item index=\"0\" class=\"java.lang.String\" itemvalue=\"org.jetbrains.annotations.Nullable\" />\r\n          <item index=\"1\" class=\"java.lang.String\" itemvalue=\"javax.annotation.Nullable\" />\r\n          <item index=\"2\" class=\"java.lang.String\" itemvalue=\"javax.annotation.CheckForNull\" />\r\n          <item index=\"3\" class=\"java.lang.String\" itemvalue=\"edu.umd.cs.findbugs.annotations.Nullable\" />\r\n          <item index=\"4\" class=\"java.lang.String\" itemvalue=\"android.support.annotation.Nullable\" />\r\n          <item index=\"5\" class=\"java.lang.String\" itemvalue=\"androidx.annotation.Nullable\" />\r\n          <item index=\"6\" class=\"java.lang.String\" itemvalue=\"android.annotation.Nullable\" />\r\n          <item index=\"7\" class=\"java.lang.String\" itemvalue=\"androidx.annotation.RecentlyNullable\" />\r\n          <item index=\"8\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.qual.Nullable\" />\r\n          <item index=\"9\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.compatqual.NullableDecl\" />\r\n          <item index=\"10\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.compatqual.NullableType\" />\r\n          <item index=\"11\" class=\"java.lang.String\" itemvalue=\"com.android.annotations.Nullable\" />\r\n          <item index=\"12\" class=\"java.lang.String\" itemvalue=\"org.eclipse.jdt.annotation.Nullable\" />\r\n          <item index=\"13\" class=\"java.lang.String\" itemvalue=\"io.reactivex.annotations.Nullable\" />\r\n          <item index=\"14\" class=\"java.lang.String\" itemvalue=\"io.reactivex.rxjava3.annotations.Nullable\" />\r\n        </list>\r\n      </value>\r\n    </option>\r\n    <option name=\"myNotNulls\">\r\n      <value>\r\n        <list size=\"14\">\r\n          <item index=\"0\" class=\"java.lang.String\" itemvalue=\"org.jetbrains.annotations.NotNull\" />\r\n          <item index=\"1\" class=\"java.lang.String\" itemvalue=\"javax.annotation.Nonnull\" />\r\n          <item index=\"2\" class=\"java.lang.String\" itemvalue=\"edu.umd.cs.findbugs.annotations.NonNull\" />\r\n          <item index=\"3\" class=\"java.lang.String\" itemvalue=\"android.support.annotation.NonNull\" />\r\n          <item index=\"4\" class=\"java.lang.String\" itemvalue=\"androidx.annotation.NonNull\" />\r\n          <item index=\"5\" class=\"java.lang.String\" itemvalue=\"android.annotation.NonNull\" />\r\n          <item index=\"6\" class=\"java.lang.String\" itemvalue=\"androidx.annotation.RecentlyNonNull\" />\r\n          <item index=\"7\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.qual.NonNull\" />\r\n          <item index=\"8\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.compatqual.NonNullDecl\" />\r\n          <item index=\"9\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.compatqual.NonNullType\" />\r\n          <item index=\"10\" class=\"java.lang.String\" itemvalue=\"com.android.annotations.NonNull\" />\r\n          <item index=\"11\" class=\"java.lang.String\" itemvalue=\"org.eclipse.jdt.annotation.NonNull\" />\r\n          <item index=\"12\" class=\"java.lang.String\" itemvalue=\"io.reactivex.annotations.NonNull\" />\r\n          <item index=\"13\" class=\"java.lang.String\" itemvalue=\"io.reactivex.rxjava3.annotations.NonNull\" />\r\n        </list>\r\n      </value>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 4ccb02739fb8eb4c84f00b11fb21af81bec46881)
+++ .idea/misc.xml	(date 1623856964012)
@@ -45,5 +45,5 @@
       </value>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="11" project-jdk-type="JavaSDK" />
 </project>
\ No newline at end of file
